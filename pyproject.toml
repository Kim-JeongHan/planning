[project]
name = "planning"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Kim-JeongHan", email = "Kim-JeongHan@naver.com" }
]
requires-python = ">=3.10"
dependencies = [
    "viser>=1.0.13",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.8.0",
    "black>=24.0.0",
    "mypy>=1.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes (unused imports, variables)
    "I",    # isort (import sorting)
    "N",    # pep8-naming
    "UP",   # pyupgrade (modernize Python code)
    "B",    # flake8-bugbear (find likely bugs)
    "C90",  # mccabe (complexity checking)
    "ANN",  # flake8-annotations (type annotations)
    "S",    # flake8-bandit (security checks)
    "SIM",  # flake8-simplify (simplification)
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",    # line too long (handled by Black)
    "ANN101",  # missing type annotation for self
    "ANN102",  # missing type annotation for cls
    "S101",    # use of assert (OK in tests)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*.py" = ["S101", "ANN"]  # Allow assert and missing annotations in tests

[tool.ruff.lint.isort]
known-first-party = ["planning"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_calls = false
warn_redundant_casts = true
warn_unused_ignores = false
no_implicit_optional = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "examples.*"
disallow_untyped_defs = false
